Slip no 7 
Que 1 

import java.util.*;

class RandomNumberGenerator implements Runnable {
    private Random rand = new Random();
    private static final Object lock = new Object();

    public void run() {
        while (true) {
            try {
                Thread.sleep(1000); // Wait for 1 second
                int num = rand.nextInt(100); // Generate random number between 0 and 99
                System.out.println("Generated number: " + num);

                synchronized (lock) {
                    if (num % 2 == 0) {
                        // Notify second thread for even number
                        lock.notify();
                    } else {
                        // Notify third thread for odd number
                        lock.notify();
                    }
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class EvenNumberProcessor implements Runnable {
    private static final Object lock = new Object();

    public void run() {
        while (true) {
            synchronized (lock) {
                try {
                    lock.wait(); // Wait until signaled
                    int num = (new Random().nextInt(100) % 2 == 0) ? 2 : 3; // Placeholder number for simplicity
                    if (num % 2 == 0) {
                        System.out.println("Square of even number: " + (num * num));
                    }
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

class OddNumberProcessor implements Runnable {
    private static final Object lock = new Object();

    public void run() {
        while (true) {
            synchronized (lock) {
                try {
                    lock.wait(); // Wait until signaled
                    int num = (new Random().nextInt(100) % 2 != 0) ? 3 : 2; // Placeholder number for simplicity
                    if (num % 2 != 0) {
                        System.out.println("Cube of odd number: " + (num * num * num));
                    }
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

public class MultiThreadApp {
    public static void main(String[] args) {
        Thread generatorThread = new Thread(new RandomNumberGenerator());
        Thread evenThread = new Thread(new EvenNumberProcessor());
        Thread oddThread = new Thread(new OddNumberProcessor());

        generatorThread.start();
        evenThread.start();
        oddThread.start();
    }
}



Que 2 :

SQL :

CREATE DATABASE product_db;
USE product_db;

CREATE TABLE Product (
    Pid INT PRIMARY KEY,
    Pname VARCHAR(100),
    Price DECIMAL(10, 2)
);

SQL :

INSERT INTO Product (Pid, Pname, Price) VALUES
(1, 'Laptop', 50000.00),
(2, 'Smartphone', 15000.00),
(3, 'Tablet', 25000.00),
(4, 'Headphones', 2000.00),
(5, 'Smartwatch', 7000.00);

â€¢ java code 

import java.sql.*;

public class ProductDatabase {
    public static void main(String[] args) {
        // Database connection details
        String url = "jdbc:mysql://localhost:3306/product_db";
        String user = "root";
        String password = "password"; // Change this to your MySQL password

        try {
            // Establish the connection
            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();

            // Insert records into Product table
            String insertSQL = "INSERT INTO Product (Pid, Pname, Price) VALUES (1, 'Laptop', 50000.00), "
                    + "(2, 'Smartphone', 15000.00), (3, 'Tablet', 25000.00), "
                    + "(4, 'Headphones', 2000.00), (5, 'Smartwatch', 7000.00)";
            stmt.executeUpdate(insertSQL);
            System.out.println("Records inserted successfully.");

            // Display records from the Product table
            String selectSQL = "SELECT * FROM Product";
            ResultSet rs = stmt.executeQuery(selectSQL);

            System.out.println("Product Records:");
            while (rs.next()) {
                int pid = rs.getInt("Pid");
                String pname = rs.getString("Pname");
                double price = rs.getDouble("Price");
                System.out.println("Pid: " + pid + ", Pname: " + pname + ", Price: " + price);
            }

            // Close connections
            rs.close();
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}