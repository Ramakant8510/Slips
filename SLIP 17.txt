Slip 17 ,
Question 1
import java.util.*;

public class SortedIntegers {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Create a TreeSet to store integers (sorted and no duplicates)
        Set<Integer> numbers = new TreeSet<>();

        // Accept N integers from the user
        System.out.print("Enter the number of integers you want to input: ");
        int N = scanner.nextInt();

        System.out.println("Enter the integers:");
        for (int i = 0; i < N; i++) {
            int number = scanner.nextInt();
            numbers.add(number); // TreeSet will avoid duplicates and sort automatically
        }

        // Display the integers in sorted order
        System.out.println("The integers in sorted order without duplicates:");
        for (int num : numbers) {
            System.out.println(num);
        }

        scanner.close();
    }
}

Question 2
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class NumberDisplayApp implements Runnable {
    private JTextField textField;
    private boolean isRunning;

    // Constructor to initialize the GUI components
    public NumberDisplayApp() {
        JFrame frame = new JFrame("Number Display");
        textField = new JTextField(20);
        JButton startButton = new JButton("Start");

        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isRunning) {
                    // Start the thread if it's not already running
                    Thread thread = new Thread(NumberDisplayApp.this);
                    thread.start();
                    isRunning = true;
                }
            }
        });

        frame.setLayout(new FlowLayout());
        frame.add(textField);
        frame.add(startButton);
        frame.setSize(300, 100);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

    // Runnable's run method to display numbers continuously from 1 to 100
    @Override
    public void run() {
        int number = 1;
        while (true) {
            try {
                // Update the textField with the current number
                textField.setText(String.valueOf(number));
                number++;
                if (number > 100) {
                    number = 1; // Reset the number to 1 after reaching 100
                }
                Thread.sleep(500); // Wait for 500 milliseconds
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        // Run the GUI in the Event Dispatch Thread (Swing thread)
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new NumberDisplayApp(); // Initialize the app
            }
        });
    }
}